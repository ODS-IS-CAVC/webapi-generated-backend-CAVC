/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.7.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package net.ouranos.application.digiline.controller;

import net.ouranos.domain.digiline.model.DataModelFacade;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;

import java.util.Optional;
import java.util.UUID;

import jakarta.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2024-09-13T11:52:56.606621700+09:00[Asia/Tokyo]", comments = "Generator version: 7.7.0")
@Validated
@Tag(name = "C-2-2[B] 車両情報連携システム", description = "the C-2-2[B] 車両情報連携システム API")
public interface FacadeApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /facade : C-2-2[B] 直接アクセス・ポイント情報取得
     * 直接アクセス・ポイント情報データモデルのデータを取得します。
     *
     * @return OK (status code 200)
     *         or 認証トークン不備、有効期限切れ、アクセス権限無し (status code 401)
     */
    @Operation(
        operationId = "facadeGet",
        summary = "C-2-2[B] 直接アクセス・ポイント情報取得",
        description = "直接アクセス・ポイント情報データモデルのデータを取得します。",
        tags = { "C-2-2[B] 車両情報連携システム" },
        responses = {
            @ApiResponse(responseCode = "200", description = "OK", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = DataModelFacade.class))
            }),
            @ApiResponse(responseCode = "401", description = "認証トークン不備、有効期限切れ、アクセス権限無し")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/facade",
        produces = { "application/json" }
    )
    
    ResponseEntity<DataModelFacade> facadeGet(
        @Parameter(name = "X-Tracking", description = "トラッキングID", in = ParameterIn.HEADER) @RequestHeader(value = "X-Tracking", required = false) UUID xTracking
        
    );

}
